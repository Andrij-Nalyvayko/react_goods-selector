{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","products","stringEdit","copyProducts","length","result","join","indexOfcomma","lastIndexOf","substr","this","className","type","onClick","setState","map","product","includes","indexOf","splice","prevState","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAKMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA4GaC,E,4MAnGbC,MAAe,CACbC,SAAU,CAAC,Q,EAGbC,WAAa,WACX,IAAQD,EAAa,EAAKD,MAAlBC,SAEFE,EAAY,YAAOF,GAEzBE,EAAaF,EAASG,OAAS,GAA/B,cAA2CH,EAASA,EAASG,OAAS,GAAtE,iBACA,IAAMC,EAASF,EAAaG,KAAK,MAC3BC,EAAeF,EAAOG,YAAY,KAKxC,OAHkBH,EAAOI,OAAO,EAAGF,GAChBF,EAAOI,OAAOF,EAAe,EAAGF,EAAOD,S,4CAK5D,WAAU,IAAD,OACCH,EAAaS,KAAKV,MAAlBC,SAiBR,OACE,sBAAKU,UAAU,MAAf,UACE,6BAjBsB,IAApBV,EAASG,OACL,GAAN,OAAUH,EAAV,gBAGsB,IAApBA,EAASG,OACL,GAAN,OAAU,YAAIH,GAAUK,KAAK,SAA7B,iBAGEL,EAASG,OAAS,EACb,EAAKF,aAGP,sBASL,wBACEU,KAAK,SACLD,UAAS,iBAAaV,EAASG,OAAU,kBAAoB,gBAC7DS,QAAS,WACHZ,EAASG,OAAS,GACpB,EAAKU,SAAS,CAAEb,SAAU,MALhC,uBAYA,6BACGH,EAAgBiB,KAAI,SAAAC,GACnB,OACE,qBAEEL,UAAS,gBAAWV,EAASgB,SAASD,GAAW,mBAAqB,kBAFxE,UAIGA,EAED,wBACEJ,KAAK,SACLD,UAAU,SACVE,QAAS,WACP,GAAKZ,EAASgB,SAASD,GAOhB,CACL,IAAME,EAAUjB,EAASiB,QAAQF,GAEjCf,EAASkB,OAAOD,EAAS,GAEzB,EAAKJ,UAAS,SAACM,GAAD,MAAgB,CAC5BnB,SAAS,YACJmB,EAAUnB,mBAbjB,EAAKa,UAAS,SAACM,GAAD,MAAgB,CAC5BnB,SAAS,GAAD,mBACHmB,EAAUnB,UADP,CAENe,SARV,sBALKA,e,GA5DHK,IAAMC,WCpBxBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ef129b59.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React from 'react';\n// import classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  goods?: string;\n  products: string[];\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    products: ['Jam'],\n  };\n\n  stringEdit = () => {\n    const { products } = this.state;\n\n    const copyProducts = [...products];\n\n    copyProducts[products.length - 1] = `and ${products[products.length - 1]} are selected`;\n    const result = copyProducts.join(', ');\n    const indexOfcomma = result.lastIndexOf(',');\n\n    const firstHalf = result.substr(0, indexOfcomma);\n    const secondHalf = result.substr(indexOfcomma + 1, result.length);\n\n    return firstHalf + secondHalf;\n  };\n\n  render() {\n    const { products } = this.state;\n    const performGoods = () => {\n      if (products.length === 1) {\n        return `${products} is selected`;\n      }\n\n      if (products.length === 2) {\n        return `${[...products].join(' and ')} are selected`;\n      }\n\n      if (products.length > 2) {\n        return this.stringEdit();\n      }\n\n      return 'No goods selected';\n    };\n\n    return (\n      <div className=\"App\">\n        <h1>\n          {performGoods()}\n        </h1>\n\n        <button\n          type=\"button\"\n          className={`button ${(products.length) ? 'button__visible' : 'button__hide'}`}\n          onClick={() => {\n            if (products.length > 0) {\n              this.setState({ products: [] });\n            }\n          }}\n        >\n          X CLEAR X\n        </button>\n\n        <ol>\n          {goodsFromServer.map(product => {\n            return (\n              <li\n                key={product}\n                className={`goods ${products.includes(product) ? 'goods__unvisited' : 'goods__visited'}`}\n              >\n                {product}\n\n                <button\n                  type=\"button\"\n                  className=\"select\"\n                  onClick={() => {\n                    if (!products.includes(product)) {\n                      this.setState((prevState) => ({\n                        products: [\n                          ...prevState.products,\n                          product,\n                        ],\n                      }));\n                    } else {\n                      const indexOf = products.indexOf(product);\n\n                      products.splice(indexOf, 1);\n\n                      this.setState((prevState) => ({\n                        products: [\n                          ...prevState.products,\n                        ],\n                      }));\n                    }\n                  }}\n                >\n                  Select\n                </button>\n              </li>\n            );\n          })}\n        </ol>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}